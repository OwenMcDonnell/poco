project(":NetSSL_OpenSSL") {
	model {
		components {
			PocoNetSSL_OpenSSL(NativeLibrarySpec) {
				sources {
					cpp {
						source {
							srcDir 'src'
							include '**/*.cpp'
						}
						exportedHeaders {
							srcDir 'include'
						}
						lib library: 'ssl', linkage: 'api'
					}
				}
			}
		}
		binaries {
			withType(SharedLibraryBinarySpec) {
				lib project: ':Crypto', library: 'PocoCrypto', linkage: 'shared'
				lib project: ':Net', library: 'PocoNet', linkage: 'shared'
				lib project: ':Util', library: 'PocoUtil', linkage: 'shared'
				lib project: ':Foundation', library: 'PocoFoundation', linkage: 'shared'
				if (toolChain in VisualCpp) {
					 cppCompiler.define "NetSSL_OpenSSL_EXPORTS"
				}
			}
			withType(StaticLibraryBinarySpec) {
				 lib project: ':Crypto', library: 'PocoCrypto', linkage: 'static'
				 lib project: ':Net', library: 'PocoNet', linkage: 'static'
				 lib project: ':Util', library: 'PocoUtil', linkage: 'static'
				 lib project: ':Foundation', library: 'PocoFoundation', linkage: 'static'
			}
		}
	}
}

