project(":Foundation") {
	model {
		components {
			PocoFoundation(NativeLibrarySpec) {
				sources {
					mc {
						source {
							srcDir 'src'
							include '**/*.mc'
						}
					}
					rc {
						source {
							srcDir 'src'
							include '**/*.rc'
						}
					}
					c {
						source {
							srcDir 'src'
							include '**/*.c'
						}
					}
	//ByteOrder
	//String
	//SignalHandler
					cpp {
						source {
							srcDir 'src'
							include '**/*.cpp'
							exclude 'Environment_*.cpp'
							exclude 'FPEnvironment_*.cpp'
							exclude 'Timezone_*.cpp'
							exclude 'DirectoryIterator_*.cpp'
							exclude 'File_*.cpp'
							exclude 'FileStream_*.cpp'
							exclude 'Path_*.cpp'
							exclude 'LogFile_*.cpp'
							exclude 'NamedEvent_*.cpp'
							exclude 'NamedMutex_*.cpp'
							exclude 'PipeImpl_*.cpp'
							exclude 'Process_*.cpp'
							exclude 'SharedMemory_*.cpp'
							exclude 'SharedLibrary_*.cpp'
							exclude 'Event_*.cpp'
							exclude 'Mutex_*.cpp'
							exclude 'RWLock_*.cpp'
							exclude 'Semaphore_*.cpp'
							exclude 'Thread_*.cpp'
	//						if (toolChain in VisualCpp) {
								exclude 'SyslogChannel.cpp'
								exclude 'OpcomChannel.cpp'
								exclude 'AndroidLogChannel.cpp'
	//						}
						}
						exportedHeaders {
							srcDir 'include'
						}
					}
				}
			}
		}
		binaries {
			all {
			}
			withType(SharedLibraryBinarySpec) {
				if (toolChain in VisualCpp) {
					cCompiler.define "Foundation_EXPORTS"
					cppCompiler.define "Foundation_EXPORTS"
				}
			}
		}
	}
}
//tasks.build.dependsOn collectBinaries

