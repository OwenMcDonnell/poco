model {
	repositories {
		libs(PrebuiltLibraries) {
			postgres {
				headers.srcDir "$postgresHome/include"

				binaries.withType(SharedLibraryBinary) {
					sharedLibraryFile 		= file("$postgresHome/lib/libpq.dll")
					sharedLibraryLinkFile 	= file("$postgresHome/lib/libpq.lib")
				}
				binaries.withType(StaticLibraryBinary) {
					staticLibraryFile 		= file("$postgresHome/lib/libpq.lib")
				}
			}
		}
	}
	components {
		DataPostgreSQL(NativeLibrarySpec) {
			sources {
				rc {
					source {
						srcDir '../..'
						include 'DLLVersion.rc'
					}
				}
				cpp {
					source {
						srcDir 'src'
						include '**/*.cpp'
					}
					exportedHeaders {
						srcDir 'include'
					}
					lib library: 'postgres', linkage: 'static'
				}
			}
		}
	}
	binaries {
		all {
		}
		withType(SharedLibraryBinarySpec) {
			lib project: ':Data', library: 'Data', linkage: 'shared'
			lib project: ':Foundation', library: 'Foundation', linkage: 'shared'
			if (toolChain in VisualCpp) {
				 cppCompiler.define "PostgreSQL_EXPORTS"
			}
		}
		withType(StaticLibraryBinarySpec) {
			lib project: ':Data', library: 'Data', linkage: 'static'
			lib project: ':Foundation', library: 'Foundation', linkage: 'static'
		}
	}
}


